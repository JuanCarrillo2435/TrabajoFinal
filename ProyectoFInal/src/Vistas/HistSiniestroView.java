/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package Vistas;

import Data.*;
import Entidades.*;
import java.time.LocalDate;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author plopez
 */
public class HistSiniestroView extends javax.swing.JInternalFrame {

    SiniestroData sd = new SiniestroData();
    
    private DefaultTableModel modelo = new DefaultTableModel(){
        public boolean isCellEditable (int f, int c){
            return false;
        }
    };
    
    public HistSiniestroView() {
        initComponents();
        armarCabecera();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableSiniestro = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jcInicio = new com.toedter.calendar.JDateChooser();
        jcFinal = new com.toedter.calendar.JDateChooser();
        jbFiltrar = new javax.swing.JButton();
        jbLimpiar = new javax.swing.JButton();
        jbSalir = new javax.swing.JButton();

        setClosable(true);
        setTitle("Historial de Siniestros");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setText("Historial de Siniestros");

        jTableSiniestro.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTableSiniestro);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Filtrar entre fechas");

        jLabel3.setText("Fecha de Inicio");

        jLabel4.setText("Fecha Final");

        jbFiltrar.setText("Filtrar");
        jbFiltrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbFiltrarActionPerformed(evt);
            }
        });

        jbLimpiar.setText("Limpiar");
        jbLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbLimpiarActionPerformed(evt);
            }
        });

        jbSalir.setText("Salir");
        jbSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jbSalirActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(355, 355, 355)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jcInicio, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(37, 37, 37)
                                .addComponent(jLabel3)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(130, 130, 130)
                                .addComponent(jLabel4)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(85, 85, 85)
                                .addComponent(jcFinal, javax.swing.GroupLayout.PREFERRED_SIZE, 163, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(90, 90, 90)
                                .addComponent(jbFiltrar)
                                .addGap(76, 76, 76)
                                .addComponent(jbLimpiar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 171, Short.MAX_VALUE)
                                .addComponent(jbSalir)))))
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(130, 130, 130)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 335, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jcInicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcFinal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jbFiltrar)
                        .addComponent(jbLimpiar)
                        .addComponent(jbSalir)))
                .addContainerGap(18, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_jbSalirActionPerformed

    private void jbFiltrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbFiltrarActionPerformed
                
        if (camposVacios()){
            JOptionPane.showMessageDialog(this,"Debes completar Fecha de Inicio y Final");
        }else{
            cargarSiniestros();
        }
    }//GEN-LAST:event_jbFiltrarActionPerformed

    private void jbLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jbLimpiarActionPerformed
        modelo.setRowCount(0);
        jcInicio.setDate(null);
        jcFinal.setDate(null);
    }//GEN-LAST:event_jbLimpiarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTableSiniestro;
    private javax.swing.JButton jbFiltrar;
    private javax.swing.JButton jbLimpiar;
    private javax.swing.JButton jbSalir;
    private com.toedter.calendar.JDateChooser jcFinal;
    private com.toedter.calendar.JDateChooser jcInicio;
    // End of variables declaration//GEN-END:variables


    private void armarCabecera(){
        modelo.addColumn("ID");
        modelo.addColumn("Tipo");
        modelo.addColumn("X");
        modelo.addColumn("Y");
        modelo.addColumn("Brigada");
        modelo.addColumn("Detalles");
        modelo.addColumn("Fecha Inicio");
        modelo.addColumn("Puntuacion");
        modelo.addColumn("Fecha Resolucion");
        modelo.addColumn("Activo");
        modelo.addColumn("Hora");
        jTableSiniestro.setModel(modelo);
        
    }
    
    private boolean camposVacios(){
        return ( (jcInicio.getDate()==null) || (jcFinal.getDate()==null));
    }
    
    private void cargarSiniestros(){
        modelo.setRowCount(0);
        List<Siniestro> siniestros;
        List<Siniestro> siniestros2;
        siniestros = sd.listarSiniestrosResueltos();
        siniestros2 = sd.listarSiniestrosNOResueltos();
        LocalDateTime fi =  LocalDateTime.ofInstant(jcInicio.getDate().toInstant(),ZoneId.systemDefault());
        LocalDateTime ff =  LocalDateTime.ofInstant(jcFinal.getDate().toInstant(),ZoneId.systemDefault());

        for(Siniestro s : siniestros){
            LocalDateTime fr = s.getFecha_siniestro();
//            if ((fi.compareTo(fr)>=0) && (fr.compareTo(ff)>=0)){
            if(fi.isBefore(fr) && ff.isAfter(fr)){
                
                modelo.addRow(new Object[]{s.getCodigo(), s.getTipo(), s.getCoord_X(), s.getCoord_Y(), s.getCodBrigada().getNombre_br(), s.getDetalle(), (s.getFecha_siniestro().getYear()+"-"+s.getFecha_siniestro().getMonthValue()+"-"+s.getFecha_siniestro().getDayOfMonth()),s.getPuntuacion(),(s.getFecha_resol().getYear()+"-"+s.getFecha_resol().getMonthValue()+"-"+s.getFecha_resol().getDayOfMonth()),"NO",s.getFecha_siniestro().getHour()+":"+s.getFecha_siniestro().getMinute()});
//                System.out.println(s.getCodBrigada().getNombre_br());
            }
        }
        
        for(Siniestro s : siniestros2){
            LocalDateTime fr = s.getFecha_siniestro();
//            if ((fi.compareTo(fr)>=0) && (fr.compareTo(ff)>=0)){
            if(fi.isBefore(fr) && ff.isAfter(fr)){
                
                modelo.addRow(new Object[]{s.getCodigo(), s.getTipo(), s.getCoord_X(), s.getCoord_Y(), s.getCodBrigada().getNombre_br(), s.getDetalle(), (s.getFecha_siniestro().getYear()+"-"+s.getFecha_siniestro().getMonthValue()+"-"+s.getFecha_siniestro().getDayOfMonth()),"-","-","SI",s.getFecha_siniestro().getHour()+":"+s.getFecha_siniestro().getMinute()});
//                System.out.println(s.getCodBrigada().getNombre_br());
            }
        }
    }

}
